exit
continue
passport
valid_attributes
n
valid_attributes
n
value
exit
continue
	exit
continue
value.slice(0,3)
value.slice(3)
value.slice(0,3)
value.slice
value
continue
value
n
value
exit
continue
valid_attributes
exit
continue
key
n
key
n
key
exit
continue
value
continue
value.to_i
value
continue
exit
input_string.empty?
input_string.blank?
attributes_pairs || line
line
attributes_pairs
attribute_pairs
n
input_string
n
nil.nil?
[].nil?
[1] == true
[] == true
input_string.split(' ') == true
input_string.split(' ').truthy?
input_string.split(' ')
input_string
input_buffer
n
exit
input.last == line
input.last
input.size
line
exit
input.size
input
exit
continue
line
continue
n
continue
sanitized_input[count].split(' ').each do |i| p i.split(':') end
sanitized_input[count].split(' ').each do |i| i.split(':') end
sanitized_input[count].split(' ')
OpenStruct.new(sanitized_input[count].split(' '))
sanitized_input[count].split(' ')
sanitized_input[count].split(' ').join(',')
OpenStruct.new(sanitized_input[count].split(' ').join(','))
sanitized_input[count].split(' ').join(',').to_hah
sanitized_input[count].split(' ').join(',')
sanitized_input[count].splict(' ').join(',')
JSON.parse(sanitized_input[count])
require 'json'
sanitized_input[count].to_hash
sanitized_input[count]
sanitize_input[count]
